{"version":3,"sources":["../../src/util/log.util.js"],"names":["log","debug","type","console","Date","err","process","env","NODE_ENV","message"],"mappings":";;;;;kBAEwBA,G;QASRC,K,GAAAA,K;;AAXhB;;AAEe,SAASD,GAAT,CAAaA,GAAb,EAAgC;AAAA,QAAdE,IAAc,uEAAP,KAAO;;;AAE3C,QAAI,OAAOF,GAAP,IAAc,QAAlB,EAA4B;AACxBG,gBAAQD,IAAR,QAAkB,sBAAW,IAAIE,IAAJ,EAAX,EAAuB,qBAAvB,CAAlB,qBAA+EJ,GAA/E;AACH,KAFD,MAEO;AACHG,gBAAQD,IAAR,EAAcF,GAAd;AACH;AACJ;;AAEM,SAASC,KAAT,CAAeI,GAAf,EAAoB;;AAEvB,QAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCR,YAAIK,GAAJ,EAAS,OAAT;AACH,KAFD,MAEO;AACHL,YAAIK,IAAII,OAAR;AACH;AACJ","file":"log.util.js","sourcesContent":["import {dateFormat} from \"./time.util\";\n\nexport default function log(log, type = 'log') {\n\n    if (typeof log == 'string') {\n        console[type](`[${dateFormat(new Date(), 'yyyy-MM-dd hh:mm:ss')}] [Koahubjs] ${log}`);\n    } else {\n        console[type](log);\n    }\n}\n\nexport function debug(err) {\n\n    if (process.env.NODE_ENV !== 'production') {\n        log(err, 'error');\n    } else {\n        log(err.message);\n    }\n}"]}